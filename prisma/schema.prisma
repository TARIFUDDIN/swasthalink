generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  clerkId     String   @unique
  email       String   @unique
  firstName   String?
  lastName    String?
  phone       String?
  role        Role     @default(PATIENT)
  village     String?
  specialization String? // For doctors
  experience     Int?    // For doctors
  languages      String[] // Array of languages
  availability   Json?    // Store weekly schedule
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  patientAppointments  Appointment[] @relation("PatientAppointments")
  doctorAppointments   Appointment[] @relation("DoctorAppointments")
  healthRecords        HealthRecord[]
  
  @@map("users")
}

model Appointment {
  id          String      @id @default(cuid())
  patientId   String
  doctorId    String
  date        DateTime
  time        String
  status      AppStatus   @default(SCHEDULED)
  symptoms    String?
  notes       String?
  meetingUrl  String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  patient     User        @relation("PatientAppointments", fields: [patientId], references: [id])
  doctor      User        @relation("DoctorAppointments", fields: [doctorId], references: [id])
  
  @@map("appointments")
}

model HealthRecord {
  id          String   @id @default(cuid())
  userId      String
  diagnosis   String?
  medicines   String?
  notes       String?
  date        DateTime @default(now())
  doctorName  String?
  createdAt   DateTime @default(now())
  
  user        User     @relation(fields: [userId], references: [id])
  
  @@map("health_records")
}

model Pharmacy {
  id          String   @id @default(cuid())
  name        String
  address     String
  phone       String?
  village     String
  medicines   Medicine[]
  createdAt   DateTime @default(now())
  
  @@map("pharmacies")
}

model Medicine {
  id          String   @id @default(cuid())
  name        String
  stock       Int      @default(0)
  price       Float?
  pharmacyId  String
  lastUpdated DateTime @updatedAt
  
  pharmacy    Pharmacy @relation(fields: [pharmacyId], references: [id])
  
  @@map("medicines")
}

enum Role {
  PATIENT
  DOCTOR
  PHARMACIST
  ADMIN
}

enum AppStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
  IN_PROGRESS
}